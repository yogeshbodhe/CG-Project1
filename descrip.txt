Yogesh Bodhe
ITCS 6120 - Project 2

Incomplete parts:
-----------------
  - none

Bugs in code:
-------------
  - none

Extensions/extra credit completed:
----------------------------------
  - Implemented torus as a tessellated primitive (both in OpenGL and GLSL)
  - Polygon offsetting (to prevent z-fighting)
  - Implemented Phong model (when 'Phong model' checkbox is enabled)
  - Drawing of vertex normal vectors on the surface (works with the polygon meshes)

================================================================

Methods completed or changed (Java and GLSL)
--------------------------------------------

Ellipsoid.java
- evalPosition(): compute ellipsoid position from u,v
- evalNormal():   compute ellipsoid normal vector from u,v

ellipsoid.vp (GLSL)
- ellipsoidPosition(): compute ellipsoid position from u,v
- ellipsoidNormal():   compute ellipsoid normal vector from u,v
- main(): compute vertex and normal using u-v's in gl_Vertex and gl_Normal (by using ellipsoidPosition() and ellipsoidNormal() methods)

Torus.java
- evalPosition(): Compute torus position from u,v
- evalNormal():   Compute torus normal vector from u,v

torus.vp (GLSL)
- torusPosition(): Compute torus position from u,v
- torusNormal():   Compute torus normal vector from u,v
- main(): Compute vertex and normal using u-v's in gl_Vertex and gl_Normal (by using torusPosition() and torusNormal() methods)

illum.fp (GLSL)
- toonShade(): Compute toon shade value given diffuse and specular component levels
- main(): Compute the diffuse and specular component levels (the specular component value depends on the model: Blinn-Phong or Phong)

PolyMesh.java
- computeAllNormals(): Compute all polygon and vertex normal vectors

Shape.java
- draw(): Draw the scene (by turning GLSL on if available and necessary, setting up lighting and materials, applying transformation matrix and calling appropriate functions for drawing)
- drawPolygons(): Draw polygons in mesh (smooth shaded if drawSmooth option is true)
- drawWireframe(): Draw wireframe of mesh
- drawNormals(): Draw vector normal vectors on the surface